title: "Python Data/Methods"
format: html
  html:
    toc: true
    html-math-method: katex
    css: styles.css
---

# Multicritera Evaluation #1

## Data Clean-Up

### Methodology

-   Turn cultural resources, natural resource, infrastructure/facilities into a mosaic raster.
-   Re-scale the elevation measurements so the lowest elevation is 1 and the highest elevation is 0.
-   Code the land cover using reclassify (Dense vegetation = 0, Shrubs/mixed vegetation = 0.5, No vegetation = 1).
-   Re-scale the distance from the sandy shorelines so the cells closest to sandy shorelines are 1 and the cells furthest from the sandy shorelines are 0.
-   Re-scale the distance from retreating bluffs so the cells closest to bluff are 1 and the cells furthest from the bluff are 0.
-   Flood destruction rasters of all the CFEP zones needs to be split up by 10% and 1% raster grids per Sea Level Rise Scneario (2030, 2050, and 2070).

### Workspace set-up

``` {#workspace .python .Python style="color: grey"}
#Import system modules
import arcpy
from arcpy import env  
from arcpy.sa import *
arcpy.env.workspace = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data"
env.scratchWorkspace ="C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Scratch.gdb"
```

### Data processing and clean-up for MCE #1 raster grid inputs

-   **R1. Focal Resources Raster Mosaic.**

    -   Input 1: Natural Resources (salt marshes, coastal bird habitats, coastal dunes, rare plant species,

    -   Input 2: Cultural Resources (National Historic Landmarks, Native American burial sites, etc.)

    -   Input 3: Infrastructure/Facilties (piers, park facilities, cottages, shops, etc.)

        ``` python
        # Turn all feature classes in focalresources_vectorinputs.gdb into raster datasets.

        # Compile all focal resources datasets into a mosaic raster that can be used in the MCE #1 BOHA Raster Calculater ArcGIS Geoprocessing tool
        ```

-   **R2. Raster of localized Boston Harbor Islands conditions that contributes to coastal exposure risk**

    -   [Erosion Risk]{.smallcaps}

        *Input 1: Retreating Bluff Zones (0-1)*

        ``` python
        # Local variables
        inSourceData_BR = "Vector_Data.gdb/Bluffs_Retreating"
        cellSize = 1
        mask_features = "Vector_Data.gdb/Amy_BOHA9_POLYS"
        # Local output save locations
        in_raster_BR = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Scratch.gdb/BR_EucDistOut"
        BluffRetreat_Grid = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Outputs.gdb/BluffRetreat_Grid"

        #Step 1: Euclidean distance tool
        with arcpy.EnvManager(mask = mask_features):
            BOHA_BluffsRetreating_EucDistance = arcpy.sa.EucDistance(in_source_data = inSourceData_BR, cell_size = cellSize)
            BOHA_BluffsRetreating_EucDistance.save(in_raster_BR)
        in_raster_BR = arcpy.Raster(in_raster_BR)

        #Step 2: Re-scale the distance from the sandy shorelines so the cells closest to sandy shorelines are 1 and the cells furthest from the sandy shorelines are 0.
        BluffRetreat_Grid = (1-(in_raster_BR - in_raster_BR.minimum)/(in_raster_BR.maximum-in_raster_BR.minimum))
        BluffRetreat_Grid.save(BluffRetreat_Grid)
        ```

        *Input 2: Distance from sandy shorelines (0-1)*

        ``` python
        #Local variables
        inSourceData_SS = "Vector_Data.gdb/Sandy_Shoreline"
        mask_features = "Vector_Data.gdb/Amy_BOHA9_POLYS"
        cellSize = 1
        # Local output save locations
        in_raster_SS = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Scratch.gdb/SS_EucDistOut"
        SandyShoreline_Grid = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Outputs.gdb/SandyShoreline_Grid"

        #Step 1: Euclidean distance tool
        with arcpy.EnvManager(mask = mask_features):
            SS_EucDistance = arcpy.sa.EucDistance(in_source_data = inSourceData_SS, cell_size = cellSize)
            SS_EucDistance.save(in_raster_SS)
        in_raster_SS = arcpy.Raster(in_raster_SS)

        #Step 2: Re-scale the distance from the sandy shorelines so the cells closest to sandy shorelines are 1 and the cells furthest from the sandy shorelines are 0.
        SS_Grid = (1-(in_raster_SS - in_raster_SS.minimum)/(in_raster_SS.maximum-in_raster_SS.minimum))
        SS_Grid.save(SandyShoreline_Grid)
        ```

        *Input 3: Unvegetated land cover (0 = dense vegetation, 0.5 = partial vegetation, 1 = no vegetation)*

        \[land use information\]

        ``` python
        # Local variables
        insourceData_LC = "Vector_Data.gdb/Landcover_polys"
        cellSize = 1
        mask_features = "Vector_Data.gdb/Amy_BOHA9_POLYS"
        # Local output locations
        Landcover_raster = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Scratch.gdb/Landcover_Raster"
        Landcover_Grid = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Outputs.gdb/Landcover_Grid"

        # Step 1: Turn vector data into raster data
        with arcpy.EnvManager(mask = mask_features):
            arcpy.conversion.PolygonToRaster(in_features = insourceData_LC, value_field = "COVERCODE", out_rasterdataset = Landcover_raster, cellsize = cellSize)

        # Step 2: Code the land cover using reclassify (0 = dense vegetatation, 0.5 = partially vegetated, 1 = no vegetation)
        LC_ReclassifyGrid = arcpy.sa.Reclassify(in_raster = Landcover_raster, reclass_field = "Value", remap = RemapValue([[2,10],[5,10],[6,5],[7,5],[8,5],[9,0],[10,0],[12,0],[13,0], [14,0],[15,5],[18,5],[19,10],[20,10],[23,10]]))

        # Step 3: Raster calculator so that vegetation is valued at 0 to 1
        LC_Grid = LC_ReclassifyGrid/10
        LC_Grid.save(Landcover_Grid)
        ```

    -   [Food Risk]{.smallcaps}

        *Input 4: Elevation*

        ``` python
        # Local variables
        inRaster_Elev = arcpy.Raster("Raster_Data.gdb/MA_GCS_3m_NAVDm")
        mask_features = "Vector_Data.gdb/Amy_BOHA9_POLYS.shp"
        # Local output locations
        Elevation_Grid = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Outputs.gdb/Elevation_Grid"

        #Step 1: INVERSE: Re-scale the elevation measurements so the lowest elevation is 1 and the highest elevation is 0.
        with arcpy.EnvManager(mask = mask_features):
            Elev_Grid = (1-(inRaster_Elev - inRaster_Elev.minimum)/(inRaster_Elev.maximum - inRaster_Elev.minimum))
            Elev_Grid.save(Elevation_Grid)
        ```

    -   [Storm risk]{.smallcaps}

        *Input 5: Sea Level Rise 10% AEP*

        ``` python
        #Setting the environment
        for Raster, Name in MassCZM_folder
        for Raster, Name in #  NOT  IMPLEMENTED(MassCZM_CFEP_gdb, "tif*", "", "NOT_RECURSIVE"):

            #Local variables
            Name = "Raster"
            #Local output locations
            CellStatistic_Ouput = fr"C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Scratch.gdb/{Name}CellStats"
            CellStats = CellStatistic_Ouput  
            c_10CFEP = "C:/Users/amyca/OneDrive/Documents/GTECH732_AdvGIS/Final_Project/BOHA_SpatialDecisionSupportSystem/Data/Raster_Outputs.gdb/{Name}c_10CFEP"
            Reclassify_c_10CFEP = c_10CFEP

            # Step 1: Cell Statistics. This process will calculate a cell-by-cell mean statistic from multiple rasters...the Mass_CZM Coastal Flood Excedence RGB raster data
            CellStatistic_Ouput = arcpy.sa.CellStatistics(in_rasters_or_constants = [Raster], statistics_type = "MEAN",
                                                          ignore_nodata = "DATA", process_as_multiband = "SINGLE_BAND",
                                                          percentile_value = 90,
                                                          percentile_interpolation_type = "AUTO_DETECT")
            CellStatistic_Ouput.save(CellStats)


            # Step 2: Reclassify and assign cell statistic values to reflect 10% CFEP
            c2030_10CFEP = arcpy.sa.Reclassify(in_raster = CellStatistic_Output, reclass_field = "VALUE", remap = "0 0;28.666666 0;84.333336 0;85.666664 1;86.666664 0;136 1;140.333328 1;148 0;169.666672 0;170 0;172.666672 0;199 0;208.333328 1", missing_values = "DATA")

            c_10CFEP.save(Reclassify_c_10CFEP)
        ```

-   **R3. Sea Level Rise 1% AEP**

    ``` python
    #    "                                                                                       "

        #Local Variables
        Name = "Raster"
        #Local Ouputs
        c2030_1CFEP = "C:\\Users\\amyca\\Dropbox (Hunter College)\\BOHA_Final_Project_Products\\Raster_Calculator_Grids\\MassCZM_CFEP.gdb\\c2030_1CFEP"
        Reclassify_c_1CFEP = c_1CFEP

        # Step 3. Reclassify and assign cell statistic values to reflect 10% CFEP
        c_1CFEP = arcpy.sa.Reclassify(in_raster = CellStatistic_Ouput, reclass_field = "VALUE",
                                             remap="0 0;28.666666 0;84.333336 1;85.666664 1;86.666664 1;136 1;140.333328 1;148 1;169.666672 1;170 1;172.666672 1;199 1;208.333328 1", missing_values="DATA")

        c_1CFEP.save(c_1CFEP)
    ```

## ArcGIS Geoprocessing Tool

If you would like to use your own data please feel free to use the above scripts as a guideline for cleaning up your vector data to meet the tool requirements. Assuming you are using my data or your own that's in raster format, you are available to download this tool to develop your own MCE weight analysis coastal exposure risk layers. The only requirement is to have your own raster data available.

The raster data must have a level system of 0 to 1 in order to be accurately valued. The raster data must also fall along the categories of:

-   Natural resources, cultural resources, and infrastructure/facilities
-   Sandy or other highly erodible sediment for shoreline type
-   Vegetation levels
-   Bluff Retreat Zones
-   Sea Level Rise Scenarios (CFEP)

``` python
# Script for the tool: develop weights for your categories...
```

Click [here]{.smallcaps} to Download the ArcGIS Geoprocessing Tool: "Boston Harbor Coastal Exposure Risk Tool."